import { useState, useEffect } from 'react';

const NewsGrid = ({ prompt }) => {
  const [news, setNews] = useState([]);
  const [expanded, setExpanded] = useState(false);

  // 获取新闻数据
  useEffect(() => {
    const fetchNews = async () => {
      const lastUpdated = localStorage.getItem(`lastUpdated_${prompt}`);
      const now = new Date().getTime();
      
      if (!lastUpdated || (now - lastUpdated) > 86400000) { // 24小时更新
        const response = await fetch('/api/generate-news', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ prompt }),
        });
        const newNews = await response.json();
        setNews(newNews);
        localStorage.setItem(`lastUpdated_${prompt}`, now);
      }
    };
    fetchNews();
  }, [prompt]);

  return (
    <div className={`news-box ${expanded ? 'expanded' : ''}`} 
         onClick={() => setExpanded(!expanded)}>
      {news.slice(0, expanded ? 6 : 3).map((item, index) => (
        <div key={index} className="news-item">
          <h3>{item.title}</h3>
          {expanded && <p>{item.summary}</p>}
        </div>
      ))}
    </div>
  );
};




.news-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  padding: 20px;
}

.news-box {
  aspect-ratio: 1/1;
  border: 2px solid #ccc;
  padding: 15px;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s ease;
}

.news-box.expanded {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 80vw;
  height: 80vh;
  z-index: 100;
}




const Settings = () => {
  const [prompts, setPrompts] = useState(['', '']);
  
  const savePrompt = (index, value) => {
    const newPrompts = [...prompts];
    newPrompts[index] = value;
    setPrompts(newPrompts);
    localStorage.setItem('newsPrompts', JSON.stringify(newPrompts));
  };

  return (
    <div className="settings">
      {prompts.map((prompt, index) => (
        <div key={index}>
          <h3>格子 {index + 1} 的Prompt设置</h3>
          <textarea 
            value={prompt}
            onChange={(e) => savePrompt(index, e.target.value)}
          />
        </div>
      ))}
    </div>
  );
};